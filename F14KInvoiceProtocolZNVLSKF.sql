SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.REPEX_INVOICE_PROTOCOL_ZNVLS_KF') IS NULL EXEC('CREATE PROCEDURE DBO.REPEX_INVOICE_PROTOCOL_ZNVLS_KF AS RETURN')
GO
ALTER PROCEDURE DBO.REPEX_INVOICE_PROTOCOL_ZNVLS_KF
    @XMLPARAM NTEXT AS

DECLARE @HDOC INT
DECLARE @ID_GLOBAL UNIQUEIDENTIFIER

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT, @XMLPARAM OUTPUT
SELECT @ID_GLOBAL = ID_GLOBAL FROM OPENXML(@HDOC, '/XML') WITH(ID_GLOBAL UNIQUEIDENTIFIER 'ID_GLOBAL')
EXEC SP_XML_REMOVEDOCUMENT @HDOC

SELECT
	FR_NAME = CASE WHEN ISNULL(C_FR.FULL_NAME, '') = '' THEN C_FR.NAME ELSE C_FR.FULL_NAME END,
	TO_NAME = CASE WHEN ISNULL(C_TO.FULL_NAME, '') = '' THEN C_TO.NAME ELSE C_TO.FULL_NAME END,
	DIR = C_FR.DIRECTOR_FIO,
	INCOMING_BILL_NUMBER = ISNULL(I.INCOMING_BILL_NUMBER,INCOMING_NUMBER),
	INCOMING_BILL_DATE = ISNULL(I.INCOMING_BILL_DATE, INCOMING_DATE),
	I.MNEMOCODE,
	I.DOCUMENT_DATE
FROM INVOICE I
	INNER JOIN STORE S ON I.ID_STORE = S.ID_STORE
	INNER JOIN CONTRACTOR C_TO ON C_TO.ID_CONTRACTOR = S.ID_CONTRACTOR
	INNER JOIN CONTRACTOR C_FR ON C_FR.ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER
WHERE I.ID_INVOICE_GLOBAL = @ID_GLOBAL

SELECT
	ID = II.ID_INVOICE_ITEM,
	NUM = 1,
	MNN = ISNULL(SUB.NAME,''),
	GOODS_NAME = G.NAME,
	SERIES_NAME = S.SERIES_NUMBER,
	PRODUCER_NAME = P.NAME,
	REGISTER_PRICE = L.REGISTER_PRICE,
	PRICE_PROD = II.PRODUCER_PRICE,
	
	SUP_NUM2 =		SM2.NUMBER,
	SUP_ADPRICE2 =	SM2.[PERCENT],
	SUM_ADPRICE2 =	SM2.[SUM],
	PRICE_SUP2 =	SM2.PRICE,
	PRICE_SUP2_VAT = SM2.PRICE,
	
	SUP_NUM3 =	CASE WHEN SM3.NUMBER IS NULL THEN 10 ELSE SM3.NUMBER*5 + (4 - SM3.NUMBER) END,
	SUP_ADPRICE3 =	CASE WHEN SM2.NUMBER IS NULL THEN II.SUPPLIER_ADPRICE ELSE SM3.[PERCENT] END,
	SUM_ADPRICE3 =	CASE WHEN SM2.NUMBER IS NULL THEN II.SUPPLIER_PRICE * II.SUPPLIER_ADPRICE / (100 + II.SUPPLIER_ADPRICE) ELSE SM3.[SUM] END,
	PRICE_SUP3 =	CASE WHEN SM2.NUMBER IS NULL THEN II.SUPPLIER_PRICE ELSE SM3.PRICE END, 
	PRICE_SUP3_VAT = CASE WHEN SM2.NUMBER IS NULL THEN II.SUPPLIER_PRICE_VAT ELSE SM3.PRICE END, 
	
	SUP_ADPRICE = L.ADPRICE_SUP,
	SUM_ADPRICE = II.SUPPLIER_PRICE * II.SUPPLIER_ADPRICE / (100 + II.SUPPLIER_ADPRICE),
	PRICE_SUP = II.SUPPLIER_PRICE,
	PRICE_SUP_VAT = II.SUPPLIER_PRICE_VAT,
	SUP_ADPRICE_SAL = L.ADPRICE_SAL,
	SUM_ADPRICE_SAL = L.PRICE_PROD * L.ADPRICE_SAL / 100,
	II.RETAIL_PRICE,
	II.RETAIL_PRICE_VAT,
	SUM_SUP_ADPRICE = L.ADPRICE_SUP + L.ADPRICE_SAL,
	SUM_SUM_ADPRICE = ( II.SUPPLIER_PRICE * II.SUPPLIER_ADPRICE / (100 + II.SUPPLIER_ADPRICE)) + (L.PRICE_PROD * L.ADPRICE_SAL / 100),
	SM3.NUMBER,
	PRODUCER_RELEASE_DATE= CONVERT(varchar,II.PRODUCER_RELEASE_DATE,104)  --PRINT CONVERT(varchar,GETDATE(),104)

INTO #II	
FROM INVOICE_ITEM II
	INNER JOIN GOODS G ON G.ID_GOODS = II.ID_GOODS
	INNER JOIN PRODUCER P ON P.ID_PRODUCER = G.ID_PRODUCER
	INNER JOIN LOT L ON L.ID_DOCUMENT_ITEM = II.ID_INVOICE_ITEM_GLOBAL
	LEFT JOIN SERIES S ON S.ID_SERIES = II.ID_SERIES
	LEFT JOIN SUBSTANCE SUB ON SUB.ID_SUBSTANCE = G.ID_SUBSTANCE	
	LEFT JOIN INVOICE_ITEM_SUPPLIER_MARGIN SM2 ON SM2.ID_INVOICE_ITEM_GLOBAL = II.ID_INVOICE_ITEM_GLOBAL AND SM2.NUMBER = 1
	LEFT JOIN INVOICE_ITEM_SUPPLIER_MARGIN SM3 ON SM3.ID_INVOICE_ITEM_GLOBAL = II.ID_INVOICE_ITEM_GLOBAL AND SM3.NUMBER > 1
WHERE II.ID_INVOICE_GLOBAL = @ID_GLOBAL AND G.IMPORTANT = 1

--DECLARE @MAX_SUP_NUM3 INT = (SELECT MAX(SUP_NUM3) FROM #II)

--INSERT INTO #II (
--	ID, NUM, GOODS_NAME, SERIES_NAME, PRODUCER_NAME, 
--	REGISTER_PRICE, PRICE_PROD, SUP_NUM2, SUP_ADPRICE2, SUM_ADPRICE2, PRICE_SUP2, 
--	SUP_NUM3, SUP_ADPRICE3, SUM_ADPRICE3, PRICE_SUP3,
--	SUP_ADPRICE, SUM_ADPRICE, PRICE_SUP, 
--	SUP_ADPRICE_SAL, SUM_ADPRICE_SAL, RETAIL_PRICE, RETAIL_PRICE_VAT)
--SELECT 
--	ID, NUM, GOODS_NAME, SERIES_NAME, PRODUCER_NAME, 
--	REGISTER_PRICE, PRICE_PROD, SUP_NUM2, SUP_ADPRICE2, SUM_ADPRICE2, PRICE_SUP2, 
--	@MAX_SUP_NUM3 +3, CASE WHEN ISNULL(PRICE_SUP3,0) = 0 THEN 0 ELSE round(100 * (PRICE_SUP - PRICE_SUP3) / PRICE_SUP3,2) END, PRICE_SUP - PRICE_SUP3, PRICE_SUP,
--	SUP_ADPRICE, SUM_ADPRICE, PRICE_SUP, 
--	SUP_ADPRICE_SAL, SUM_ADPRICE_SAL, RETAIL_PRICE, RETAIL_PRICE_VAT
--FROM #II I
--WHERE EXISTS(
--	SELECT NULL FROM #II T
--	WHERE T.ID = I.ID AND NUMBER IS NOT NULL
--	GROUP BY ID, NUM, GOODS_NAME, SERIES_NAME, PRODUCER_NAME, 
--		REGISTER_PRICE, PRICE_PROD, SUP_NUM2, SUP_ADPRICE2, SUM_ADPRICE2, PRICE_SUP2, 
--		SUP_ADPRICE, SUM_ADPRICE, PRICE_SUP, 
--		SUP_ADPRICE_SAL, SUM_ADPRICE_SAL, RETAIL_PRICE, RETAIL_PRICE_VAT
--	HAVING MAX(T.SUP_NUM3) = I.SUP_NUM3
--)


DECLARE @ID BIGINT, @COUNT INT = 1
DECLARE CUR_II CURSOR FAST_FORWARD FOR

SELECT DISTINCT ID
FROM #II
ORDER BY ID

OPEN CUR_II
	FETCH NEXT FROM CUR_II INTO @ID
	WHILE @@FETCH_STATUS = 0
	BEGIN
		
		UPDATE #II SET NUM = @COUNT WHERE ID = @ID
		
		SET @COUNT = @COUNT + 1
	
	FETCH NEXT FROM CUR_II INTO @ID
	END
CLOSE CUR_II
DEALLOCATE CUR_II 

SELECT *
FROM #II
ORDER BY SUP_NUM3, NUM


RETURN 0
GO

--exec DBO.REPEX_INVOICE_PROTOCOL_ZNVLS_GPKK N'<XML><ID_GLOBAL>83873CA8-2B9D-4AB2-B338-00CA58F0252C</ID_GLOBAL></XML>'
--exec DBO.REPEX_INVOICE_PROTOCOL_ZNVLS_GPKK N'<XML><ID_GLOBAL>A019C74F-B9C3-4BF6-AEBF-6AE0DBD78419</ID_GLOBAL></XML>'



